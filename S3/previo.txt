1- Ejemplo_fork1
	Soy el proceso 8178 - Padre
	Soy el proceso 8179 - Hijo
	
2- Ejemplo_fork2
	Antes del fork: Soy el proceso 8737 - Padre, ya que es el inicial
	PADRE: Soy el proceso 8737 - Padre, ya que en el switch, el pid consultado es
							     diferente a 0 i a -1
	Los DOS: Soy el proceso 8737 - Padre, ya que el pid es el del padre
	HIJO: Soy el proceso 8738 - Hijo, ya que en el switch, el pid consultado es
								0.
	Los DOS: Soy el proceso 8738 - Hijo, ya que el pid es el del hijo
	
3- Ejemplo_fork3
	Antes del fork: Soy el proceso 3755 - Padre, ya que es el incial
	PADRE: Soy el proceso 3755 - Padre, ya que el switch, se selecciona
	Solo lo ejecuta el padre: Soy el proceso 3755 - Padre, ya que sigue la ejecución y
							  el hijo muere antes de poder ejecutarlo
	HIJO: Soy el proceso 3756 - Hijo, por el switch
	
4- Ejemplo_fork4
	Antes del fork: Soy el proceso 3864 - Padre, ya que es el incial
	PADRE: Soy el proceso 3864 - Padre, ya que el switch, se selecciona
	Solo lo ejecuta el padre: Soy el proceso 3864 - Padre, ya que sigue la ejecución y
													el hijo muere antes de poder ejecutarlo
	HIJO: Soy el proceso 3865 - Hijo, ya que el switch lo selecciona
	HIJO acaba: Soy el proceso 3865 - Hijo, ya que es su pid
	
	MODIFICACIÓN (en el switch) :
	default: /* (pid !=0) && (pid !=-1) */
			/* Escribe aqui el codigo del padre */
			sprintf(buffer,"PADRE: Soy el proceso %d\n",getpid());
			write(1, buffer, strlen(buffer));
			waitpid(-1,NULL,0);
	
5 - Ejemplo_fork5
	Antes del fork: Soy el proceso 3938 - Padre, ya que inicializa
	PADRE: Soy el proceso 3938 - Padre, seleccionado en el switch, espera al hijo (waitpid)
	HIJO: Soy el proceso 3939 - Hijo, el switch lo selecciona
	HIJO:La variable_global vale A y la local a - Hijo, antes de morir
	PADRE:La variable_global vale A y la local a - Padre, ya que el hijo a muerto
	Solo lo ejecuta el padre: Soy el proceso 3938 - Padre, el unico vivo y por su pid
	
	MODIFICACIÓN (en el switch, antes de consultarlas el hijo) :
	//Modificación
		variable_global = 'B';
		variable_local = 'b';
		
6 - Ejemplo_fork6
	El Hijo y el Padre muestran los diferentes caracteres despues del variable_global
	No lo podemos asegurar, ya que el hijo y el padre se les asigna la CPU aleatoriamente, entonces
	imprimiran las diferentes lineas en diferente orden.

7 - Ejemplo_fork7
	No compila, por el hecho de que no esta declarada la variabe_local en la función, para
	solucionarlo, pasamos por referencia el valor i ya compila. No tiene nada que ver con la
	creación de procesos.
	
8 - Ejemplo_exec1
	Ejecuta los comandos (mutando el proceso) ls ls-l. Se ve una vez, ya que el proceso muta.
	
9 - Ejemplo_exec2
	Soy el proceso: 5520
	Soy el proceso 5520
	Soy el proceso 5521
	
	Se ejecutan 2 procesos, uno que muta para ejecutar ejemplo_exec1 i el otro que es su hijo.
	



